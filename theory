снепшот – это сам файл после изменения.

 Альтернативой снепшоту являются дифы.
 Представьте, что вместо сохранения новой версии файла Dropbox бы вычислял разницу между новым и старым файлом (а это не сложно сделать для текстовых файлов) и сохранял только ее.
 Такой подход позволяет экономить место на диске, хотя и вносит дополнительную сложность при работе с файлами.

 Ревизия - Любое зафиксированное изменение в системе контроля версий.

 Обратите внимание на то, что ревизия и снепшот – это не одно и тоже.
 Фиксация изменений порождает ревизию, но
 сама ревизия может содержать внутри себя либо диф изменений, либо снепшот.

 checkout  процесс переключения между ревизиями
 Когда мы загружаем конкретную ревизию, то говорят, что мы делаем чекаут (checkout).

Dif Между ревизиями можно вычислять разницу (говорят, диф) в случае, если СКВ использует снепшоты

Всего используется три способа создание ревизии:
    Сохранение
    Автосохранение
    По кнопке (команде)

______

процесс создания ревизии называется коммит (commit)
правила хорошего комита:
Именование.
    Коммиты должны иметь осмысленное описание. Например: "fix scrolling".
Атомарность.
    Коммит должен решать одну задачу и желательно от начала до конца.

репозиторий набор файлов и директорий, которые находятся под контролем версий.

СКВ принято делить на поколения:

Первое поколение
RCS, SCCS
    Работали с каждым файлом индивидуально
    Только локальная работа

Второе поколение
CVS, SourceSafe, Subversion
    Многофайловые
    Централизованные
    Требуют наличия сервера

Третье поколение
Git, Bazaar, Mercurial
    Распределенные
    У каждого свой полноценный репозиторий


_____________

git init - инициализация репозитория
cat .git/config содержимое файла config.
Все настройки проекта, которые вы будете проделывать со своим репозиторием, содержатся в этом файле.

git clone git@github.com:company-name/example.git
Эта команда клонирует (скачивает) репозиторий в папку example

git status

Где можно найти конфигурацию репозитория? В файле .git/config
рабочая копия - Директория, в которой находятся файлы проекты, то есть все кроме самой папки .git


touch README.md # Создаем файл
echo '# Hi' > README.md # Меняем содержимое
git add README.md # Так гит увидит новый файл
git commit -m 'init project' # Коммит с сообщением 'init project'
Ключ -m позволяет добавить короткое описание коммита. Если выполнить коммит без этого ключа, то откроется редактор с информацией о коммите.

Дальнейший рабочий процесс выглядит так:
example$ echo 'my first change' >> README.md # Добавляем новую строку в файл
example$ git add README.md # Подготовка к коммиту
example$ git commit -m 'update readme'


git log посмотреть историю коммитов
git log -p выводит непрерывный diff всех изменений по коммитам Нажимая f и b в этом выводе можно перемещаться по истории изменений.

git show изменения сделанные в конкретном коммите


___________________
В первую очередь все файлы делятся на tracked и untracked.
Untracked – это новый файл, который не был добавлен для отслеживания командой git add.
Все остальные файлы являются tracked.












